Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].

The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.

You must write an algorithm that runs in O(n) time and without using the division operation.

class Solution {
    public int[] productExceptSelf(int[] nums) {
         int product = 1;
        int[] result = new int[nums.length];
        for(int i =0; i< nums.length; i ++){
            product = product * nums[i];
        }

        for(int i = 0; i< result.length;i++){
               int special_product = 1;
            if(nums[i] == 0){
                for(int j = 0; j< nums.length; j++){
                    if(i == j){
                        continue;
                    }
                    special_product = special_product * nums[j];

                }

                result[i] = special_product;
             
            }else{
            result[i] = product/nums[i];}
            
        }

        return result;
    }
}
